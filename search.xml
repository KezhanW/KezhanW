<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信小程序给用户发送消息</title>
      <link href="2020/12/25/WXSendMessage/"/>
      <url>2020/12/25/WXSendMessage/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常用正则表达式</title>
      <link href="2020/12/25/regular/"/>
      <url>2020/12/25/regular/</url>
      
        <content type="html"><![CDATA[<h2 id="校验数字的表达式"><a href="#校验数字的表达式" class="headerlink" title="校验数字的表达式"></a>校验数字的表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">数字：^[0-9]*$</span><br><span class="line">n位的数字：^\d&#123;n&#125;$</span><br><span class="line">至少n位的数字：^\d&#123;n,&#125;$</span><br><span class="line">m-n位的数字：^\d&#123;m,n&#125;$</span><br><span class="line">零和非零开头的数字：^(0|[1-9][0-9]*)$</span><br><span class="line">非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$</span><br><span class="line">带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$</span><br><span class="line">正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$</span><br><span class="line">有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br><span class="line">有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$</span><br><span class="line">非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$</span><br><span class="line">非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$</span><br><span class="line">非负整数：^\d+$ 或 ^[1-9]\d*|0$</span><br><span class="line">非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</span><br><span class="line">非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</span><br><span class="line">非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</span><br><span class="line">正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</span><br><span class="line">负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</span><br><span class="line">浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</span><br></pre></td></tr></table></figure><h2 id="校验字符的表达式"><a href="#校验字符的表达式" class="headerlink" title="校验字符的表达式"></a>校验字符的表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">汉字：^[\u4e00-\u9fa5]&#123;0,&#125;$</span><br><span class="line">英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]&#123;4,40&#125;$</span><br><span class="line">长度为3-20的所有字符：^.&#123;3,20&#125;$</span><br><span class="line">由26个英文字母组成的字符串：^[A-Za-z]+$</span><br><span class="line">由26个大写英文字母组成的字符串：^[A-Z]+$</span><br><span class="line">由26个小写英文字母组成的字符串：^[a-z]+$</span><br><span class="line">由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</span><br><span class="line">由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w&#123;3,20&#125;$</span><br><span class="line">中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</span><br><span class="line">中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</span><br><span class="line">可以输入含有^%&amp;&#39;,;&#x3D;?$\&quot;等字符：[^%&amp;&#39;,;&#x3D;?$\x22]+</span><br><span class="line">禁止输入含有~的字符：[^~\x22]+</span><br></pre></td></tr></table></figure><h2 id="特殊需求表达式"><a href="#特殊需求表达式" class="headerlink" title="特殊需求表达式"></a>特殊需求表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><br><span class="line">域名：[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(&#x2F;.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+&#x2F;.?</span><br><span class="line">InternetURL：[a-zA-z]+:&#x2F;&#x2F;[^\s]* 或 ^http:&#x2F;&#x2F;([\w-]+\.)+[\w-]+(&#x2F;[\w-.&#x2F;?%&amp;&#x3D;]*)?$</span><br><span class="line">手机号码：^(13[0-9]|14[0-9]|15[0-9]|16[0-9]|17[0-9]|18[0-9]|19[0-9])\d&#123;8&#125;$ (由于工信部放号段不定时，所以建议使用泛解析 ^([1][3,4,5,6,7,8,9])\d&#123;9&#125;$)</span><br><span class="line">电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：^(\(\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$ </span><br><span class="line">国内电话号码(0511-4405222、021-87888822)：\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125; </span><br><span class="line">18位身份证号码(数字、字母x结尾)：^((\d&#123;18&#125;)|([0-9x]&#123;18&#125;)|([0-9X]&#123;18&#125;))$</span><br><span class="line">帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br><span class="line">密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w&#123;5,17&#125;$</span><br><span class="line">强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?&#x3D;.*\d)(?&#x3D;.*[a-z])(?&#x3D;.*[A-Z]).&#123;8,10&#125;$  </span><br><span class="line">日期格式：^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br><span class="line">一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$</span><br><span class="line">一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ </span><br><span class="line">钱的输入格式：</span><br><span class="line">  1.有四种钱的表示形式我们可以接受:&quot;10000.00&quot; 和 &quot;10,000.00&quot;, 和没有 &quot;分&quot; 的 &quot;10000&quot; 和 &quot;10,000&quot;：^[1-9][0-9]*$ </span><br><span class="line">  2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符&quot;0&quot;不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$ </span><br><span class="line">  3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$ </span><br><span class="line">  4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ </span><br><span class="line">  5.必须说明的是,小数点后面至少应该有1位数,所以&quot;10.&quot;是不通过的,但是 &quot;10&quot; 和 &quot;10.2&quot; 是通过的：^[0-9]+(.[0-9]&#123;2&#125;)?$ </span><br><span class="line">  6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">  7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">  8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*)(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">备注：这就是最终结果了,别忘了&quot;+&quot;可以用&quot;*&quot;替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</span><br><span class="line">xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</span><br><span class="line">中文字符的正则表达式：[\u4e00-\u9fa5]</span><br><span class="line">双字节字符：[^\x00-\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br><span class="line">空白行的正则表达式：\n\s*\r    (可以用来删除空白行)</span><br><span class="line">HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?&lt;&#x2F;\1&gt;|&lt;.*? &#x2F;&gt;    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br><span class="line">首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br><span class="line">腾讯QQ号：[1-9][0-9]&#123;4,&#125;    (腾讯QQ号从10000开始)</span><br><span class="line">中国邮政编码：[1-9]\d&#123;5&#125;(?!\d)    (中国邮政编码为6位数字)</span><br><span class="line">IP地址：\d+\.\d+\.\d+\.\d+    (提取IP地址时有用)</span><br><span class="line">IP地址：((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.)&#123;3&#125;(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>获取微信小程序OpenId</title>
      <link href="2020/12/25/GetWXOpenId/"/>
      <url>2020/12/25/GetWXOpenId/</url>
      
        <content type="html"><![CDATA[<h2 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h2><ul><li>获取<code>appid</code>及<code>secret</code></li><li>获取登录凭证code</li></ul><hr><p>登陆你的微信小程序在开发设置里面可以直接看到appid和secret<br><a href="https://imgchr.com/i/rRzDMV"><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/25/rRzDMV.jpg" alt="rRzDMV.jpg"></a><br>登录凭证</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取openid</span></span><br><span class="line">uni.login(&#123;</span><br><span class="line">success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">var</span> code=res.code;<span class="comment">//登录凭证</span></span><br><span class="line"> <span class="keyword">if</span>(code) &#123;</span><br><span class="line"> uni.request(&#123;</span><br><span class="line"> url: that.apiRoot + <span class="string">&#x27;/Fly_Fp/Fly_Fp_ApplyFor/getuseropenid&#x27;</span>,</span><br><span class="line"> method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"> data: &#123; ...that.auth,</span><br><span class="line"> data: res.code</span><br><span class="line"> &#125;,</span><br><span class="line"> success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line"> <span class="comment">//openid</span></span><br><span class="line"> <span class="keyword">var</span> openId = res.data;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="请求微信API"><a href="#请求微信API" class="headerlink" title="请求微信API"></a>请求微信API</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; 获取openid</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;code&quot;&gt;登录凭证&lt;&#x2F;param&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;iv&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;encryptedData&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;returns&gt;&lt;&#x2F;returns&gt;</span><br><span class="line">public string ProcessRequest(string code, string iv, string encryptedData)</span><br><span class="line">&#123;</span><br><span class="line">    string Appid &#x3D; &quot;wx****************&quot;;</span><br><span class="line">    string Secret &#x3D; &quot;****************************&quot;;</span><br><span class="line">    string grant_type &#x3D; &quot;authorization_code&quot;;</span><br><span class="line">        </span><br><span class="line">    &#x2F;&#x2F;向微信服务端 使用登录凭证 code 获取 session_key 和 openid  </span><br><span class="line">    string url &#x3D; &quot;https:&#x2F;&#x2F;api.weixin.qq.com&#x2F;sns&#x2F;jscode2session?appid&#x3D;&quot; + Appid + &quot;&amp;secret&#x3D;&quot; + Secret + &quot;&amp;js_code&#x3D;&quot; + code + &quot;&amp;grant_type&#x3D;&quot; + grant_type;</span><br><span class="line">    string type &#x3D; &quot;utf-8&quot;;</span><br><span class="line">    var resData &#x3D; this.GetUrltoHtml(url, type);</span><br><span class="line">    return resData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt; </span><br><span class="line">&#x2F;&#x2F;&#x2F; 获取链接返回数据 </span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt; </span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;Url&quot;&gt;链接&lt;&#x2F;param&gt; </span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;type&quot;&gt;请求类型&lt;&#x2F;param&gt; </span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;returns&gt;&lt;&#x2F;returns&gt; </span><br><span class="line">public string GetUrltoHtml(string Url, string type)</span><br><span class="line">&#123;</span><br><span class="line">    try</span><br><span class="line">    &#123;</span><br><span class="line">        System.Net.WebRequest wReq &#x3D; System.Net.WebRequest.Create(Url);</span><br><span class="line">        &#x2F;&#x2F; Get the response instance. </span><br><span class="line">        System.Net.WebResponse wResp &#x3D; wReq.GetResponse();</span><br><span class="line">        System.IO.Stream respStream &#x3D; wResp.GetResponseStream();</span><br><span class="line">        &#x2F;&#x2F; Dim reader As StreamReader &#x3D; New StreamReader(respStream) </span><br><span class="line">        using (System.IO.StreamReader reader &#x3D; new System.IO.StreamReader(respStream, Encoding.GetEncoding(type)))</span><br><span class="line">        &#123;</span><br><span class="line">            return reader.ReadToEnd();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    catch (System.Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        return ex.Message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>上传/读取不规则数据的Excel</title>
      <link href="2020/12/24/ReadExcel/"/>
      <url>2020/12/24/ReadExcel/</url>
      
        <content type="html"><![CDATA[<h1 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h1><hr><p>定义一个文件选择器隐藏和一个导入按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;lr_import&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-sign-in&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="symbol">&amp;nbsp;</span>导入<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;filed&quot;</span> <span class="attr">name</span>=<span class="string">&quot;filed&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:none&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;.xls,.xlsx&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新定义一个导入按钮的目的在于便于添加额外逻辑  例如：选择不同的模板向后台传参</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入</span></span><br><span class="line">           $(<span class="string">&quot;#lr_import&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               learun.layerForm(&#123;</span><br><span class="line">                   id: <span class="string">&#x27;form7&#x27;</span>,</span><br><span class="line">                   title: <span class="string">&#x27;导入类型 &#x27;</span>,</span><br><span class="line">                   url: <span class="string">&#x27;/Fly_ZD/Fly_ZD_Head/ImportType&#x27;</span>,</span><br><span class="line">                   width: <span class="number">500</span>,</span><br><span class="line">                   height: <span class="number">300</span>,</span><br><span class="line">                   callBack: <span class="function"><span class="keyword">function</span> (<span class="params">id, index</span>) </span>&#123;</span><br><span class="line">                       <span class="keyword">var</span> resData = top[id].acceptClick();</span><br><span class="line">                       <span class="keyword">if</span> (resData) &#123;</span><br><span class="line">                           ImportType = resData;</span><br><span class="line">                           $(<span class="string">&quot;#filed&quot;</span>).trigger(<span class="string">&quot;click&quot;</span>);</span><br><span class="line">                           <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                           learun.alert.error(<span class="string">&quot;请选择导入类型&quot;</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;)</span><br><span class="line">           $(<span class="string">&quot;#filed&quot;</span>).on(<span class="string">&quot;change&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">               <span class="keyword">var</span> fileM = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#filed&quot;</span>);</span><br><span class="line">               <span class="comment">//获取文件对象，files是文件选取控件的属性，存储的是文件选取控件选取的文件对象，类型是一个数组</span></span><br><span class="line">               <span class="keyword">var</span> fileObj = fileM.files[<span class="number">0</span>];</span><br><span class="line">               <span class="comment">//创建formdata对象，formData用来存储表单的数据，表单数据时以键值对形式存储的。</span></span><br><span class="line">               <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">               formData.append(<span class="string">&#x27;filed&#x27;</span>, fileObj);</span><br><span class="line">               learun.loading(<span class="literal">true</span>, <span class="string">&#x27;正在导入……&#x27;</span>);</span><br><span class="line">               $.ajax(&#123;</span><br><span class="line">                   url: <span class="string">&quot;/Fly_ZD/Fly_ZD_Head/Import?ImportType=&quot;</span> + ImportType,</span><br><span class="line">                   type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                   dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                   data: formData,</span><br><span class="line">                   <span class="keyword">async</span>: <span class="literal">false</span>,</span><br><span class="line">                   cache: <span class="literal">false</span>,</span><br><span class="line">                   contentType: <span class="literal">false</span>,</span><br><span class="line">                   processData: <span class="literal">false</span>,</span><br><span class="line">                   success: <span class="function"><span class="keyword">function</span> (<span class="params">json_data</span>) </span>&#123;</span><br><span class="line">                       learun.loading(<span class="literal">false</span>);</span><br><span class="line">                       $(<span class="string">&quot;#filed&quot;</span>).val(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                   &#125;,</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;);</span><br></pre></td></tr></table></figure><hr><h1 id="读取文件及存储数据"><a href="#读取文件及存储数据" class="headerlink" title="读取文件及存储数据"></a>读取文件及存储数据</h1><p>先将选择的文件上传到服务器 再读取该Excel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; 毕勤制单导入</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;filed&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;returns&gt;&lt;&#x2F;returns&gt;</span><br><span class="line">public ActionResult Import(HttpPostedFileBase filed, string ImportType)</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;服务器上的UpLoadFile文件夹必须有读写权限</span><br><span class="line">    string target &#x3D; Server.MapPath(&quot;&#x2F;&quot;) + ($&quot;&#x2F;UploadFile&#x2F;biqin&#x2F;&#123;DateTime.Now.Year&#125;&#x2F;&#123;DateTime.Now.Month&#125;&#x2F;&quot;);&#x2F;&#x2F;取得存储文件夹的路径</span><br><span class="line">    string filename &#x3D; filed.FileName;&#x2F;&#x2F;取得文件名字</span><br><span class="line">    string path &#x3D; target + filename;&#x2F;&#x2F;获取存储的目标地址</span><br><span class="line">    &#x2F;&#x2F;判断该文件路径是否存在没有则创建文件夹</span><br><span class="line">    if (!Directory.Exists(target))</span><br><span class="line">    &#123;</span><br><span class="line">        Directory.CreateDirectory(target);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;将文件保存到指定位置</span><br><span class="line">    filed.SaveAs(path);</span><br><span class="line">    &#x2F;&#x2F;读取数据 存储数据</span><br><span class="line">    GetHeadData(path, ImportType);</span><br><span class="line">    return Success(&quot;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>GetHeadData()</code> 方法对读取到的数据存到数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; 毕勤制单获取数据</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;filepath&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line">public void GetHeadData(string filepath, string ImportType)</span><br><span class="line">&#123;</span><br><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">DataSet gongsi &#x3D; ReadExcelData(filepath);</span><br><span class="line">&#x2F;&#x2F;定义两个datatable，并将传递来的dataset集中的两个表分别赋值给datatable</span><br><span class="line">&#x2F;&#x2F;发票</span><br><span class="line">DataTable fp_data &#x3D; gongsi.Tables[0];</span><br><span class="line">&#x2F;&#x2F;箱单</span><br><span class="line">DataTable xd_data &#x3D; gongsi.Tables[1];</span><br><span class="line">&#x2F;&#x2F;主表信息</span><br><span class="line">Fly_ZD_ImportMainEntity HeadEntity &#x3D; new Fly_ZD_ImportMainEntity();</span><br><span class="line">&#x2F;&#x2F;发票商品信息</span><br><span class="line">List&lt;Fly_ZD_ImportfapiaoEntity&gt; fp_xx &#x3D; new List&lt;Fly_ZD_ImportfapiaoEntity&gt;();</span><br><span class="line">&#x2F;&#x2F;箱单商品信息</span><br><span class="line">List&lt;Fly_ZD_ImportxiangdanEntity&gt; xd_xx &#x3D; new List&lt;Fly_ZD_ImportxiangdanEntity&gt;();</span><br><span class="line">if (ImportType &#x3D;&#x3D; &quot;VN&quot;)</span><br><span class="line">&#123;</span><br><span class="line">HeadEntity &#x3D; this.VNmain_xx(gongsi.Tables[0]);</span><br><span class="line">fp_xx &#x3D; this.VNfp_xx(fp_data);</span><br><span class="line">xd_xx &#x3D; this.VNxd_xx(xd_data);</span><br><span class="line">&#125;</span><br><span class="line">else if (ImportType &#x3D;&#x3D; &quot;VNBI&quot;)</span><br><span class="line">&#123;</span><br><span class="line">HeadEntity &#x3D; this.VNBImain_xx(gongsi.Tables[0]);</span><br><span class="line">fp_xx &#x3D; this.VNBIfp_xx(fp_data);</span><br><span class="line">xd_xx &#x3D; this.VNBIxd_xx(xd_data);</span><br><span class="line">&#125;</span><br><span class="line">else if (ImportType &#x3D;&#x3D; &quot;VA&quot;)</span><br><span class="line">&#123;</span><br><span class="line">HeadEntity &#x3D; this.VAmain_xx(gongsi.Tables[0]);</span><br><span class="line">fp_xx &#x3D; this.VNfp_xx(fp_data);</span><br><span class="line">xd_xx &#x3D; this.VNxd_xx(xd_data);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;保存到数据库中</span><br><span class="line">fly_ZD_HeadIBLL.SaveImport(HeadEntity, fp_xx, xd_xx);</span><br><span class="line">&#125;</span><br><span class="line">catch (Exception e)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ReadExcelData()</code> 方法读取Excel 注意工作表要加$例如下文INV$，PK$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; 读取不规则的EXcel数据</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;filepath&quot;&gt;&lt;&#x2F;param&gt;</span><br><span class="line">&#x2F;&#x2F;&#x2F; &lt;returns&gt;&lt;&#x2F;returns&gt;</span><br><span class="line">public static DataSet ReadExcelData(string filepath)</span><br><span class="line">&#123;</span><br><span class="line">    DataSet ds &#x3D; new DataSet();&#x2F;&#x2F;定义一个dataset用来存储查询到的数据</span><br><span class="line">    string connStr &#x3D; &quot;Provider&#x3D;Microsoft.Jet.OleDb.4.0;&quot; + &quot;Data Source&#x3D;&quot; + filepath + &quot;;Extended Properties&#x3D;&#39;Excel 8.0; HDR&#x3D;YES; IMEX&#x3D;1&#39;&quot;;</span><br><span class="line">    string sql_F &#x3D; &quot;SELECT * FROM [&#123;0&#125;]&quot;;</span><br><span class="line">    System.Data.OleDb.OleDbConnection conn &#x3D; null;</span><br><span class="line">    System.Data.OleDb.OleDbDataAdapter xd_da &#x3D; null;</span><br><span class="line">    System.Data.OleDb.OleDbDataAdapter fp_da &#x3D; null;</span><br><span class="line">    System.Data.DataTable tblSchema &#x3D; null;&#x2F;&#x2F;实例化一个数据表用来存储表名</span><br><span class="line">    System.Collections.Generic.IList&lt;string&gt; xd_tblNames &#x3D; null;&#x2F;&#x2F;定义一个List&lt;string&gt;变量 用来存储原始箱单表名</span><br><span class="line">    System.Collections.Generic.IList&lt;string&gt; fp_tblNames &#x3D; null;&#x2F;&#x2F;定义一个List&lt;string&gt;变量 用来存储原始发票表名</span><br><span class="line">    conn &#x3D; new System.Data.OleDb.OleDbConnection(connStr);</span><br><span class="line">    conn.Open();</span><br><span class="line">    tblSchema &#x3D; conn.GetOleDbSchemaTable(System.Data.OleDb.OleDbSchemaGuid.Tables, new object[] &#123; null, null, null, &quot;TABLE&quot; &#125;);&#x2F;&#x2F;获取所有表名</span><br><span class="line">    xd_tblNames &#x3D; new System.Collections.Generic.List&lt;string&gt;();</span><br><span class="line">    fp_tblNames &#x3D; new System.Collections.Generic.List&lt;string&gt;();</span><br><span class="line">    string xd_tblname &#x3D; &quot;&quot;;</span><br><span class="line">    string fp_tblname &#x3D; &quot;&quot;;</span><br><span class="line">    for (int tblname &#x3D; 0; tblname &lt; tblSchema.Rows.Count; tblname++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (tblSchema.Rows[tblname][2].ToString() &#x3D;&#x3D; &quot;INV$&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            xd_tblname &#x3D; tblSchema.Rows[tblname][2].ToString();&#x2F;&#x2F;获取原始箱单表名</span><br><span class="line">        &#125;</span><br><span class="line">        if (tblSchema.Rows[tblname][2].ToString() &#x3D;&#x3D; &quot;PK$&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            fp_tblname &#x3D; tblSchema.Rows[tblname][2].ToString();&#x2F;&#x2F;获取原始发票表名</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    string[] xd_tblnames &#x3D; &#123; xd_tblname &#125;;&#x2F;&#x2F;将原始箱单表名储存到数组里</span><br><span class="line">    string[] fp_tblnames &#x3D; &#123; fp_tblname &#125;;&#x2F;&#x2F;将原始发票表名储存到数组里</span><br><span class="line">    xd_tblNames &#x3D; new List&lt;System.String&gt;(xd_tblnames);&#x2F;&#x2F;将原始箱单表名赋值给xd_tblNames</span><br><span class="line">    fp_tblNames &#x3D; new List&lt;System.String&gt;(fp_tblnames);&#x2F;&#x2F;将原始发票表名赋值给xd_tblNames</span><br><span class="line"></span><br><span class="line">    xd_da &#x3D; new System.Data.OleDb.OleDbDataAdapter();</span><br><span class="line">    fp_da &#x3D; new System.Data.OleDb.OleDbDataAdapter();</span><br><span class="line">    &#x2F;&#x2F;循环获取全部的原始箱单数据</span><br><span class="line">    foreach (string tblName in xd_tblNames)</span><br><span class="line">    &#123;</span><br><span class="line">        xd_da.SelectCommand &#x3D; new System.Data.OleDb.OleDbCommand(String.Format(sql_F, tblName), conn);</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            xd_da.Fill(ds, tblName);</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            if (conn.State &#x3D;&#x3D; ConnectionState.Open)</span><br><span class="line">            &#123;</span><br><span class="line">                conn.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;循环获取全部的原始发票数据</span><br><span class="line">    foreach (string fp_tblName in fp_tblNames)</span><br><span class="line">    &#123;</span><br><span class="line">        xd_da.SelectCommand &#x3D; new System.Data.OleDb.OleDbCommand(String.Format(sql_F, fp_tblName), conn);</span><br><span class="line">        try</span><br><span class="line">        &#123;</span><br><span class="line">            xd_da.Fill(ds, fp_tblName);</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            if (conn.State &#x3D;&#x3D; ConnectionState.Open)</span><br><span class="line">            &#123;</span><br><span class="line">                conn.Close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return ds;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
